import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Toaster } from "react-hot-toast";
import {
  ClerkProvider,

} from '@clerk/nextjs';
import FloatingButton from '@/components/FloatingButton';
import { NextIntlClientProvider } from 'next-intl';
import { cookies } from 'next/headers';
import enMessages from '../messages/en.json';
import arMessages from '../messages/ar.json';
import frMessages from '../messages/fr.json';
import esMessages from '../messages/es.json';
import deMessages from '../messages/de.json';
import zhMessages from '../messages/zh.json';
import jaMessages from '../messages/ja.json';
import ptMessages from '../messages/pt.json';
import ruMessages from '../messages/ru.json';
import hiMessages from '../messages/hi.json';

import categories from './categories/Categories';
import SidebarLayout from './components/SidebarLayout';
import { CityProvider } from './context/CityContext';
import { CalculationsProvider } from './context/CalculationsContext';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "AI-PAT",
  description: "Generated by Ahmed Alaa",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const locale = cookieStore.get('NEXT_LOCALE')?.value || 'en';
  const allMessages = { 
    en: enMessages, 
    ar: arMessages,
    fr: frMessages,
    es: esMessages,
    de: deMessages,
    zh: zhMessages,
    ja: jaMessages,
    pt: ptMessages,
    ru: ruMessages,
    hi: hiMessages
  } as const;
  const messages = allMessages[locale as keyof typeof allMessages] ?? enMessages;
  const dir = locale === 'ar' ? 'rtl' : 'ltr';

  return (
    <ClerkProvider>
      <html lang={locale} dir={dir}>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <NextIntlClientProvider locale={locale} messages={messages}>
            <CityProvider>
              <CalculationsProvider>
                <SidebarLayout categories={categories}>
                  {children}
                </SidebarLayout>
              </CalculationsProvider>
            </CityProvider>
          </NextIntlClientProvider>
          <FloatingButton />
          <Toaster />
        </body>
      </html>
    </ClerkProvider>
  );
}
